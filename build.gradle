import org.openapitools.generator.gradle.plugin.tasks.GenerateTask


plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.2'
    id 'io.spring.dependency-management' version '1.1.7'

    id 'org.openapi.generator' version '7.4.0'
}

group = 'edu'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    implementation 'org.postgresql:postgresql:42.6.0'


    // Code Generation
    implementation 'jakarta.validation:jakarta.validation-api:3.1.0-M1'
    compileOnly 'jakarta.servlet:jakarta.servlet-api:6.1.0-M1'
    implementation group: 'io.swagger.core.v3', name: 'swagger-annotations', version: '2.2.21'
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.10.1'
    implementation group: 'com.squareup.okhttp3', name: 'okhttp', version: '4.12.0'
    implementation group: 'com.squareup.okhttp3', name: 'logging-interceptor', version: '4.12.0'
    implementation group: 'io.gsonfire', name: 'gson-fire', version: '1.9.0'
    implementation group: 'org.springdoc', name: 'springdoc-openapi-ui', version: '1.8.0'

    // Util
    implementation group: 'org.openapitools', name: 'jackson-databind-nullable', version: '0.2.6'
    compileOnly 'org.projectlombok:lombok:1.18.32'
    annotationProcessor 'org.projectlombok:lombok:1.18.32'

    // Mac M1 fix to resolve java.lang.UnsatisfiedLinkError
    implementation group: "io.netty", name: "netty-resolver-dns-native-macos", version: "4.1.85.Final", classifier: "osx-aarch_64"

}

tasks.named('test') {
    useJUnitPlatform()
}

sourceSets {
    main {
        java {
            srcDir 'src/main/java'
            srcDir layout.buildDirectory.dir("generated/src/main/java").get().toString()
        }
    }
}

tasks.register('generateAll') {
    group = "Code Generators"
    description = "Build lifecycle 1.0"
    dependsOn(tasks.generateServerStub)
}

tasks.register('generateServerStub', GenerateTask) {
    group = "Code Generators"

    generatorName = 'spring'
    inputSpec = layout.projectDirectory.file("src/main/resources/static/api.yml").toString()
    outputDir = layout.buildDirectory.dir("generated").get().toString()
    apiPackage = 'edu.wunschzettel.api'
    modelPackage = 'edu.wunschzettel.model'
    modelNameSuffix = "Dto"
    configOptions = [
            delegatePattern: 'true',
            useSpringBoot3: 'true'
    ]
    generateApiTests = false
    skipValidateSpec = true
}

tasks.register('removeOpenApiMainClass', Delete) {
    delete fileTree(layout.buildDirectory.dir("generated/src/main/java/org/openapitools")) {
        include "OpenApiGeneratorApplication.java"
    }
}

tasks.named('generateServerStub').configure {
    finalizedBy tasks.removeOpenApiMainClass
}
